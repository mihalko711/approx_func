Для каждой из функций осуществляется ввод данных  с клавиатуры:количество шагов градиентного спуска, размер подвыборки, коэффициент обучаемости
"Играя" с этими параметрами можно минимизировать ошибку аппроксимации.
Усредненные значения, которые периодически дают неплохой результат на данных функциях:
    -Шаги:300-500
    -размер подвыборки:3-8
    -Коэффициент обучаемости:3-10
 Коэффициент обучаемости должен соответствовать размеру выборки, т.к. окончательный коэффициент обучаемости рассчитывается по формуле - (коэффициент обучаемости/размер выборки)
 Соответственно при слишком большом или слишком мало значении обучающего коэффициента алгоритм градиентного спуска не сойдется к локальному минимуму.

 Также мы тестируем сети с различным количеством нейронов скрытого слоя, для каждой сети мы выводим график, на котором отмечены предсказанные
 нейросетью значения функции и реальные значения функции в точках.

 Эти графики сохраняются в папку plots, у каждого графика есть заголовок, а также их можно отличить по названиям, поэтому сопроводить выполненную работу можно графиками из этой папки.

 Еще одно важное дополнение: можно заменить eps=eta/len(mini_batch) в 70 строке на eps=eta для того, чтобы убрать зависимость коэфф-та обучаемости от  размера выборки
 и  спокойно изменять количество значений в выборке

 Касательно параметров для каждой из сетей:

    1 функция: epochs=600 batch_size=3 eta=0.4
    2 функция: epochs=600 batch_size=3 eta=0.4 в этой функции может хромать ошибка аппроксимации, из-за близости значений
    функции к нулю при x->10, т.к. порядок уже слишком мал
    график при этом будет отрисовываться отлично
    3 функция: epochs=1500 batch_size=3 eta=0.3
    4 функция: тут все сложно, нужно балансировать, чтобы более менее правильно аппроксимировать
                можно попробовать 500 15 0.8
                но тут нужно начинать цикл не с 2 нейронов в слое, а примерно с 9-10,
                ибо более-менее приемлемая аппроксимация этой функции начинается с такого количества нейронов в скрытом слое
                поэтому я пока поменял цикл
  Графики для отчета можно получить, запустив прогу с указанными параметрами

  Также я поправил 4 функцию, сдвинул ее значения в отрезок [0;1], чтобы нейронка нормально работала, активация все-таки сигмооидальная
  поэтому выходное значение всегда будет от 0 до 1

  Еще кинул файл example1.png, там более-менее приемлемая аппроксимация 4 функции